<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document SYSTEM "..\..\..\Fabulae\core\dtd\effect.dtd">
<effect>
	<parameters>
		<skillLevelMind mandatory="false" type="int"/>
		<skillLevelFocus mandatory="false" type="int"/>
	</parameters>
	<description>
		<text>
			effects.json#pinDown
		</text>
		<extraParameters id="PinDownEffectDescriptionExtraParameters4">
			if (!binding.variables.containsKey("skillLevelFocus")) {
				skillLevelFocus = user.stats().skills().getSkillRank(GameCharacter.Skill.FOCUS);
			}
			return [skillLevelFocus];
		</extraParameters>
	</description>
	<type>
		Spell, Negative, Mind
	</type>
	<indicator>
		<effectId>
			pinDownIndicator
		</effectId>
		<delay>
			1
		</delay>
		<xOffset>
			0.5
		</xOffset>
		<yOffset>
			0.8
		</yOffset>
	</indicator>
	<onHit id="PinDownEffectOnHit1">
		if (target instanceof GameCharacter) {
			 if (!binding.variables.containsKey("skillLevelFocus")) {
				skillLevelFocus = user.stats().skills().getSkillRank(GameCharacter.Skill.FOCUS);
			}
			Modifier modifier = new Modifier("pinDown", Strings.getString(Spell.STRING_TABLE,"pinDownName"), false);
			modifier.setMod(ModifiableStat.DODGE, -skillLevelFocus);
			target.stats().addModifier(modifier);
			target.forbidActions("pinDown", MoveToAction.class);
			Log.logLocalized(Spell.STRING_TABLE, "pinDownHit", Log.LogType.COMBAT, user.getName(), target.getName());
		}
	</onHit>
	<duration id="PinDownEffectDuration2">
		if (!binding.variables.containsKey("skillLevelMind")) {
			skillLevelMind = user.stats().skills().getSkillRank(GameCharacter.Skill.MIND);
		}
		return MathUtils.floor(skillLevelMind /2);
	</duration>
	<onEnd id="PinDownEffectOnEnd3">
		if (target instanceof GameCharacter) {
			target.allowAllActions("pinDown");
			target.stats().removeModifier("pinDown");
			Log.logLocalized(Spell.STRING_TABLE, "pinDownExpired", Log.LogType.COMBAT, target.getName());
		}
	</onEnd>
</effect>